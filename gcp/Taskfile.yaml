# https://taskfile.dev
version: '3'

includes:
  shared: ../shared


env:
  TF_VAR_GCP_ORGANIZATION_ID: 
    sh: gcloud organizations list --format=json | jq -r '.[0].name | split("/") | .[1]' ##gcloud auth: https://stackoverflow.com/questions/53306131/difference-between-gcloud-auth-application-default-login-and-gcloud-auth-logi
  TF_VAR_COMPANY_KEY: 
    sh: echo -n $COMPANY_KEY
  UNIQUE_IDENTIFIER:
    sh: echo -n $UNIQUE_IDENTIFIER
  TF_VAR_UNIQUE_IDENTIFIER: "{{.UNIQUE_IDENTIFIER}}"
  SVC_LB_PATCH:
    sh: echo -n '{"spec"'':' '{"type"'':'  '"LoadBalancer"}}'
  VAULT_GOOGLE_CREDENTIALS:
    sh: "[ -f ./gcp-service-account-keys/hashicorp-vault.jb64 ] && cat ./gcp-service-account-keys/hashicorp-vault.jb64 || echo -n 'This needs to be fixed before you bootstrap the clusters Missing file... ./gcp-service-account-keys/hashicorp-vault.jb64'"
  TFC_GOOGLE_CREDENTIALS:
    sh: "[ -f ./gcp-service-account-keys/terraform-cloud-operator.jb64 ] && cat ./gcp-service-account-keys/terraform-cloud-operator.jb64 || echo -n 'This needs to be fixed before you bootstrap the clusters Missing file... ./gcp-service-account-keys/terraform-cloud-operator.jb64'"
  TFC_API_TOKEN:
    sh: "[ -f ./terraform-cloud-operator/team-api-token.b64 ] && cat ./terraform-cloud-operator/team-api-token.b64 || echo -n 'This needs to be fixed before you bootstrap the clusters Missing file... ./terraform-cloud-operator/team-api-token.b64'"
  GCP_KMS_ENABLED: true
  GCP_TFC_ENABLED: true
  CAPTAIN_GOOGLE_PROJECT:
    sh: echo -n {{.CAPTAIN_CLUSTER_NAME}}
  GCP_KMS_KEY_RING:
    sh: echo -n "{{.UNIQUE_IDENTIFIER}}-captain"
  CAPTAIN_CLUSTER_NAME:
    sh: echo -n "$COMPANY_KEY-{{.UNIQUE_IDENTIFIER}}-captain"
  TF_VAR_CAPTAIN_CLUSTER_NAME: "{{.CAPTAIN_CLUSTER_NAME}}"
  TF_VAR_VAULT_ADDR: "https://vault.{{.CAPTAIN_DOMAIN}}"
  ADMIRAL_CLUSTER_NAME:
    sh: echo -n "$COMPANY_KEY-{{.UNIQUE_IDENTIFIER}}-admiral"

tasks:
  auth:
    desc: Authenticate with GCP and Terraform Cloud. This must be run before gke_up and/or gke_destroy
    cmds:
      - task shared:terraform_login
      - gcloud auth application-default login --no-launch-browser
      - gcloud init --console-only


  configs:
    desc: Generate configs
    cmds:
      - shared:generate_app_configs
      - gcloud container clusters get-credentials {{.UNIQUE_IDENTIFIER}}-admiral-gke --zone us-central1-a --project {{.ADMIRAL_CLUSTER_NAME}}
      - task shared:admiral_kubeconfig_rename
      - gcloud container clusters get-credentials {{.UNIQUE_IDENTIFIER}}-captain-gke --zone us-central1-a --project {{.CAPTAIN_CLUSTER_NAME}}
      - shared:captain_kubeconfig_and_flatten_all_kubeconfigs


  gke_up:
    desc: Brings up GKE Cluster
    cmds:
      - date >> run.txt
      - terraform init
      - terraform apply --auto-approve -target=module.organization_and_project_bootstrap
      - terraform apply --auto-approve -target=module.vpc 
      - terraform apply --auto-approve -target=module.gke
      - terraform apply --auto-approve
      - terraform apply
      - date >> run.txt

  gke_bootstrap_argocd:
    desc: install argocd on admiral cluster
    cmds:
      # Deploy ArgoCD 
      - shared:deploy_argocd
      # Log in to ArgoCD on Admiral Cluster
      - until argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath="{.status.loadBalancer.ingress[0].ip}") --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --grpc-web --insecure; do echo "" ; done
      # Add Captain cluster to Admiral Cluster (from login above) from captain cluster context
      - shared:post_argocd_deploy

  clean:
    desc: Shutdown GCP Projects that contain the GKE clusters.
    vars:
      FOLDER_ID:
        sh: gcloud resource-manager folders list --organization=`gcloud organizations list --format=json | jq -r '.[0].name | split("/") | .[1]'` --filter="{{.TF_VAR_COMPANY_KEY}} Core" --format=json | jq -r '.[0].name | split("/") | .[1]' || true
    cmds:
      - terraform destroy --auto-approve -target=module.tfc || true
      - gcloud projects delete {{.CAPTAIN_CLUSTER_NAME}} --quiet || true
      - gcloud projects delete {{.ADMIRAL_CLUSTER_NAME}} --quiet || true
      - gcloud alpha billing projects unlink {{.CAPTAIN_CLUSTER_NAME}} || true
      - gcloud alpha billing projects unlink {{.ADMIRAL_CLUSTER_NAME}} || true
      - gcloud resource-manager folders update {{.FOLDER_ID}} --display-name=`date +%s`"-DELETED" || true
      - task shared:cleanup
  

      
